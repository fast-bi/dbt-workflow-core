default:
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind

variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  TAG:
    description: Tag for docker image
    value: latest

stages:
  - build
  - e2e_tests
  - confirm

build:
  tags:
    - bi
  stage: build
  image: google/cloud-sdk:alpine
  before_script:
    - echo "$GCP_SA_SECRET" | base64 -d > /root/sa.json
    - gcloud auth activate-service-account --key-file /root/sa.json
    - export GOOGLE_APPLICATION_CREDENTIALS="/root/sa.json"
    - gcloud auth configure-docker $GCP_ARTIFACT_REGISTRY_HOST
    - apk add jq
    - TRIVY_LATEST_VERSION=$(curl -s https://api.github.com/repos/aquasecurity/trivy/releases/latest | jq -r '.tag_name' | sed 's/v//g')
    - echo "Use Trivy version - $TRIVY_LATEST_VERSION"
    - wget https://github.com/aquasecurity/trivy/releases/download/v$TRIVY_LATEST_VERSION/trivy_${TRIVY_LATEST_VERSION}_Linux-64bit.tar.gz
    - tar xzvf trivy_${TRIVY_LATEST_VERSION}_Linux-64bit.tar.gz
  script:
    - docker build --tag $GCP_ARTIFACT_REGISTRY_HOST/$GCP_PROJECT_NAME/$ARTIFACT_REGISTRY_REPO/$CI_PROJECT_NAME:$TAG .
    - docker tag $GCP_ARTIFACT_REGISTRY_HOST/$GCP_PROJECT_NAME/$ARTIFACT_REGISTRY_REPO/$CI_PROJECT_NAME:$TAG  $GCP_ARTIFACT_REGISTRY_HOST/$GCP_PROJECT_NAME/$ARTIFACT_REGISTRY_REPO/$CI_PROJECT_NAME:$CI_COMMIT_TAG
    - ./trivy image --db-repository public.ecr.aws/aquasecurity/trivy-db --java-db-repository public.ecr.aws/aquasecurity/trivy-java-db --no-progress --timeout 45m --output scanning-report.json $GCP_ARTIFACT_REGISTRY_HOST/$GCP_PROJECT_NAME/$ARTIFACT_REGISTRY_REPO/$CI_PROJECT_NAME:$TAG
    - ./trivy image --db-repository public.ecr.aws/aquasecurity/trivy-db --java-db-repository public.ecr.aws/aquasecurity/trivy-java-db --ignore-unfixed --exit-code 1 --no-progress --timeout 45m --severity CRITICAL $GCP_ARTIFACT_REGISTRY_HOST/$GCP_PROJECT_NAME/$ARTIFACT_REGISTRY_REPO/$CI_PROJECT_NAME:$TAG 
    - docker push $GCP_ARTIFACT_REGISTRY_HOST/$GCP_PROJECT_NAME/$ARTIFACT_REGISTRY_REPO/$CI_PROJECT_NAME:$TAG
    - docker push $GCP_ARTIFACT_REGISTRY_HOST/$GCP_PROJECT_NAME/$ARTIFACT_REGISTRY_REPO/$CI_PROJECT_NAME:$CI_COMMIT_TAG
  artifacts:
    reports:
      container_scanning: scanning-report.json
  only:
    - tags

e2e_test_dbt_seed:
  tags:
    - bi
  stage: e2e_tests
  dependencies: ["build"]
  image: $GCP_ARTIFACT_REGISTRY_HOST/$GCP_PROJECT_NAME/$ARTIFACT_REGISTRY_REPO/$CI_PROJECT_NAME:$CI_COMMIT_TAG
  variables:
    GIT_URL: ${CI_SERVER_URL}
    GITLINK_SECRET: ${CI_REPOSITORY_URL}
    DBT_PROJECT_DIRECTORY: "e2e_dbt_project_test"
    SA_SECRET: ${GCP_SA_SECRET}
    TARGET: "sa"
    DEBUG: "true"
    SEED: "true"
    SEED_CHECK_PERIOD: "999 Day Ago"
    DBT_SEED_SHARDING: "false"
    SNAPSHOT: "false"
    MODEL_DEBUG_LOG: "false"
  script:
    - /bin/bash -c "/usr/app/dbt/api-entrypoint.sh"
  only:
    - tags

e2e_test_dbt_models_staging:
  tags:
    - bi
  stage: e2e_tests
  needs: ["e2e_test_dbt_seed"]
  image: $GCP_ARTIFACT_REGISTRY_HOST/$GCP_PROJECT_NAME/$ARTIFACT_REGISTRY_REPO/$CI_PROJECT_NAME:$CI_COMMIT_TAG
  variables:
    GIT_URL: ${CI_SERVER_URL}
    GITLINK_SECRET: ${CI_REPOSITORY_URL}
    DBT_PROJECT_DIRECTORY: "e2e_dbt_project_test"
    SA_SECRET: ${GCP_SA_SECRET}
    TARGET: "sa"
    DEBUG: "true"
    SEED: "false"
    SNAPSHOT: "false"
    MODEL: "jaffle_shop.staging.*"
    DBT_COMMAND: "run"
    MODEL_DEBUG_LOG: "false"
  script:
    - /bin/bash -c "/usr/app/dbt/api-entrypoint.sh"
  only:
    - tags

e2e_test_dbt_model_customers:
  tags:
    - bi
  stage: e2e_tests
  needs: ["e2e_test_dbt_seed","e2e_test_dbt_models_staging"]
  image: $GCP_ARTIFACT_REGISTRY_HOST/$GCP_PROJECT_NAME/$ARTIFACT_REGISTRY_REPO/$CI_PROJECT_NAME:$CI_COMMIT_TAG
  variables:
    GIT_URL: ${CI_SERVER_URL}
    GITLINK_SECRET: ${CI_REPOSITORY_URL}
    DBT_PROJECT_DIRECTORY: "e2e_dbt_project_test"
    SA_SECRET: ${GCP_SA_SECRET}
    TARGET: "sa"
    DEBUG: "true"
    SEED: "false"
    SNAPSHOT: "false"
    MODEL: "customers"
    DBT_COMMAND: "run"
    MODEL_DEBUG_LOG: "false"
  script:
    - /bin/bash -c "/usr/app/dbt/api-entrypoint.sh"
  only:
    - tags

e2e_test_dbt_model_orders:
  tags:
    - bi
  stage: e2e_tests
  needs: ["e2e_test_dbt_seed","e2e_test_dbt_models_staging"]
  image: $GCP_ARTIFACT_REGISTRY_HOST/$GCP_PROJECT_NAME/$ARTIFACT_REGISTRY_REPO/$CI_PROJECT_NAME:$CI_COMMIT_TAG
  variables:
    GIT_URL: ${CI_SERVER_URL}
    GITLINK_SECRET: ${CI_REPOSITORY_URL}
    DBT_PROJECT_DIRECTORY: "e2e_dbt_project_test"
    SA_SECRET: ${GCP_SA_SECRET}
    TARGET: "sa"
    DEBUG: "true"
    SEED: "false"
    SNAPSHOT: "false"
    MODEL: "orders"
    DBT_COMMAND: "run"
    MODEL_DEBUG_LOG: "false"
  script:
    - /bin/bash -c "/usr/app/dbt/api-entrypoint.sh"
  only:
    - tags

e2e_test_dbt_snapshot:
  tags:
    - bi
  stage: e2e_tests
  needs: ["e2e_test_dbt_seed","e2e_test_dbt_models_staging","e2e_test_dbt_model_orders"]
  image: $GCP_ARTIFACT_REGISTRY_HOST/$GCP_PROJECT_NAME/$ARTIFACT_REGISTRY_REPO/$CI_PROJECT_NAME:$CI_COMMIT_TAG
  variables:
    GIT_URL: ${CI_SERVER_URL}
    GITLINK_SECRET: ${CI_REPOSITORY_URL}
    DBT_PROJECT_DIRECTORY: "e2e_dbt_project_test"
    SA_SECRET: ${GCP_SA_SECRET}
    TARGET: "sa"
    DEBUG: "true"
    SEED: "false"
    SNAPSHOT: "true"
    SNAPSHOT_RUN_PERIOD: "true"
    DBT_SNAPSHOT_SHARDING: "false"
    MODEL_DEBUG_LOG: "false"
  script:
    - /bin/bash -c "/usr/app/dbt/api-entrypoint.sh"
  only:
    - tags

e2e_test_dbt_data_quality:
  tags:
    - bi
  stage: e2e_tests
  needs: ["e2e_test_dbt_seed","e2e_test_dbt_models_staging","e2e_test_dbt_model_customers","e2e_test_dbt_model_orders","e2e_test_dbt_snapshot"]
  image: $GCP_ARTIFACT_REGISTRY_HOST/$GCP_PROJECT_NAME/$ARTIFACT_REGISTRY_REPO/$CI_PROJECT_NAME:$CI_COMMIT_TAG
  variables:
    GIT_URL: ${CI_SERVER_URL}
    GITLINK_SECRET: ${CI_REPOSITORY_URL}
    DBT_PROJECT_DIRECTORY: "e2e_dbt_project_test"
    SA_SECRET: ${GCP_SA_SECRET}
    TARGET: "sa"
    DEBUG: "true"
    SEED: "false"
    SNAPSHOT: "false"
    MODEL: "re_data"
    DBT_COMMAND: "run"
    MODEL_DEBUG_LOG: "false"
  script:
    - /bin/bash -c "/usr/app/dbt/api-entrypoint.sh"
  only:
    - tags

e2e_test_cleanup:
  tags:
    - bi
  stage: confirm
  dependencies: ["e2e_test_dbt_seed","e2e_test_dbt_models_staging","e2e_test_dbt_model_customers","e2e_test_dbt_model_orders","e2e_test_dbt_snapshot","e2e_test_dbt_data_quality"]
  when: on_success
  image: $GCP_ARTIFACT_REGISTRY_HOST/$GCP_PROJECT_NAME/$ARTIFACT_REGISTRY_REPO/$CI_PROJECT_NAME:$CI_COMMIT_TAG
  variables:
    GIT_URL: ${CI_SERVER_URL}
    GITLINK_SECRET: ${CI_REPOSITORY_URL}
    DBT_PROJECT_DIRECTORY: "e2e_dbt_project_test"
    SA_SECRET: ${GCP_SA_SECRET}
  script:
    - /bin/bash -c "/usr/app/dbt/cleanup_e2e_test.sh"
  only:
    - tags

e2e_test_failure:
  tags:
    - bi
  stage: confirm
  dependencies: ["e2e_test_dbt_seed","e2e_test_dbt_models_staging","e2e_test_dbt_model_customers","e2e_test_dbt_model_orders","e2e_test_dbt_snapshot","e2e_test_dbt_data_quality"]
  when: on_failure
  image: google/cloud-sdk:alpine
  before_script:
    - echo "$GCP_SA_SECRET" | base64 -d > /root/sa.json
    - gcloud auth activate-service-account --key-file /root/sa.json
    - export GOOGLE_APPLICATION_CREDENTIALS="/root/sa.json"
    - gcloud auth configure-docker $GCP_ARTIFACT_REGISTRY_HOST
  script:
    - echo 'End2End Test Failed - removing image'
    - gcloud artifacts docker images delete $GCP_ARTIFACT_REGISTRY_HOST/$GCP_PROJECT_NAME/$ARTIFACT_REGISTRY_REPO/$CI_PROJECT_NAME:$CI_COMMIT_TAG --delete-tags --quiet
  only:
    - tags